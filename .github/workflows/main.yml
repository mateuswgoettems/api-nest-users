name: 'deploy-to-swarm'

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          yarn
          yarn build

  push_to_Docker_Hub:
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          yarn
          yarn build
      - name: Set Mail Variables
        run: |
          touch .env
          echo MAIL_HOST=${{ secrets.MAIL_HOST }} >> .env
          echo MAIL_PORT=${{ secrets.MAIL_PORT }} >> .env
          echo MAIL_USER=${{ secrets.MAIL_USER }} >> .env
          echo MAIL_PASS=${{ secrets.MAIL_PASS }} >> .env
      - name: Set DB Variables
        run: |
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo DB_PASSWD=${{ secrets.DB_PASSWD }} >> .env
          echo DATABASE=${{ secrets.DATABASE }} >> .env
          echo MONGO_STRING=${{ secrets.MONGO_STRING }} >> .env
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_USER }}/projects:template-users-api
  deploy:
    runs-on: [self-hosted, linux, x64]
    needs: [push_to_Docker_Hub]
    steps:
      - name: pull image in workers
        run: |
          sudo su
          /home/ubuntu/deploy-to-swarm.sh
      - name: pull the compose file in manager
        run: |
          sudo su
          /home/ubuntu/scripts/docker-start.sh
